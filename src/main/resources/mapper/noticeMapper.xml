<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lpy.news.dao.NoticeDao">
    <insert id="saveNotice" parameterType="com.lpy.news.entity.Notice">
        insert into notice (id,content,create_time,update_time,create_person,user_id)
        values (#{id},#{content}, #{createTime}, #{updateTime},{createPerson},#{userId});
    </insert>
    <update id="removeNotice" parameterType="com.lpy.news.entity.Notice">
        update notice
        set status = 0
        where id = #{id}
    </update>
    <select id="queryNoticePage" resultType="com.lpy.news.dto.NoticeDto">
        select  id,content,create_time,update_time,create_person,user_id from notice
        <where>
            status = 1
            <if test="createPerson != null and createPerson!= ''" >
                and create_person = #{createPerson}
            </if>
        </where>
        order by id  limit ${pageNo}, ${pageSize};
    </select>
    <select id="queryNoticeCount" resultType="java.lang.Integer">
        select count(*) from notice
        <where>
            status = 1
            <if test="createPerson != null and createPerson!= ''" >
                and create_person = #{createPerson}
            </if>
        </where>
    </select>
    <update id="updateNotice" parameterType="com.lpy.news.entity.Notice">
        update notice
        set content = #{content},
            update_time = #{updateTime}
        where id = #{id}
    </update>
    <select id="selectNoticeById" resultType="com.lpy.news.dto.NoticeDto">
        select id,content,create_time,update_time,create_person,user_id from notice where id = #{id} and status = 1;
    </select>
</mapper>